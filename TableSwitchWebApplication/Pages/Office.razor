@page "/office"
<PageTitle>Office</PageTitle>

@using TableSwitchWebApplication.BusineseLogics;
@using TableSwitchWebApplication.Data
@using TableSwitchWebApplication.Models;
@using TableSwitchWebApplication.Shared.Components
@inject IBusineseLogic _logic;

<TitlePageComponent Title="@title.ToUpper()"></TitlePageComponent>
 <Animate Animation="Animations.FadeDown" Duration="TimeSpan.FromSeconds(1.5)" >
    <AuthorizeView Roles="Admin">
        <Authorized>
            @if (offices is null)
            {
                <LoadingComponent></LoadingComponent>
            }
            else
            {
                <DataTableComponent Body="offices" action=true T="OfficeModel"></DataTableComponent>
    
                <div class="mt-2">
                    @if (TotalPages > 1)
                    {
                        <nav aria-label="Page navigation">
                            <ul class="pagination">
                                <li class="page-item @(PageNumber == 1 ? "disabled" : "")">
                                    <button class="page-link" @onclick="(() => ChangePage(PageNumber - 1))">Previous</button>
                                </li>
                                @for (int i = 1; i <= TotalPages; i++)
                                {
                                    <li class="page-item @(i == PageNumber ? "active" : "")">
                                        <button class="page-link" @onclick="(() => ChangePage(i))">@i</button>
                                    </li>
                                }
                                <li class="page-item @(PageNumber == TotalPages ? "disabled" : "")">
                                    <button class="page-link" @onclick="(() => ChangePage(PageNumber + 1))">Next</button>
                                </li>
                            </ul>
                        </nav>
                    }
                </div>
    
            }
    
        </Authorized>
        <NotAuthorized>
            <PermissionComponent Title="This Content Require Administrator..." />
        </NotAuthorized>
    </AuthorizeView>
</Animate>


@code {
    private string title = "list of offices";
    private IEnumerable<OfficeModel>? offices;
    private int PageNumber { get; set; } = 1;
    private int TotalPages { get; set; }=10;
    private int PageSizes { get; set; } = 10;
    private EventCallback<int> OnPageChanged { get; set; }
    protected override async Task OnInitializedAsync()
    {
        offices = await _logic.GetOfficePaginationAsync(PageNumber, PageSizes);
        TotalPages = offices.FirstOrDefault()!.TotalPage;

    }
    private async Task ChangePage(int pageNumber)
    {
        if (pageNumber < 1 || pageNumber > TotalPages)
        {
            return;
        }

        PageNumber = pageNumber;
        await OnPageChanged.InvokeAsync(PageNumber);
        offices = await _logic.GetOfficePaginationAsync(PageNumber, PageSizes);
    }

}
